"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[5565],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,b=m["".concat(i,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(b,a(a({ref:t},p),{},{components:n})):r.createElement(b,a({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},11229:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),s=(n(67294),n(3905));const o={},a="Step 2 - Install Testkube Cluster Components Using Testkube's CLI",l={unversionedId:"getting-started/step2-installing-cluster-components",id:"getting-started/step2-installing-cluster-components",title:"Step 2 - Install Testkube Cluster Components Using Testkube's CLI",description:"The Testkube CLI provides a command to easily deploy the Testkube server components to your cluster.",source:"@site/docs/getting-started/step2-installing-cluster-components.md",sourceDirName:"getting-started",slug:"/getting-started/step2-installing-cluster-components",permalink:"/testkube/getting-started/step2-installing-cluster-components",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/getting-started/step2-installing-cluster-components.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Step 1 - Installing Testkube CLI",permalink:"/testkube/getting-started/step1-installing-cli"},next:{title:"Step 3 - Creating Your First Test",permalink:"/testkube/getting-started/step3-creating-first-test"}},i={},u=[],p={toc:u};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"step-2---install-testkube-cluster-components-using-testkubes-cli"},"Step 2 - Install Testkube Cluster Components Using Testkube's CLI"),(0,s.kt)("p",null,"The Testkube CLI provides a command to easily deploy the Testkube server components to your cluster.\nRun:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"testkube init\n")),(0,s.kt)("p",null,"note: you must have your KUBECONFIG pointing to the desired location of the installation."),(0,s.kt)("p",null,"The above command will install the following components in your Kubernetes cluster:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Testkube API"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"testkube")," namespace"),(0,s.kt)("li",{parentName:"ol"},"CRDs for Tests, TestSuites, Executors"),(0,s.kt)("li",{parentName:"ol"},"MongoDB"),(0,s.kt)("li",{parentName:"ol"},"Minio - default (can be disabled with ",(0,s.kt)("inlineCode",{parentName:"li"},"--no-minio"),")"),(0,s.kt)("li",{parentName:"ol"},"Dashboard - default (can be disabled with ",(0,s.kt)("inlineCode",{parentName:"li"},"--no-dashboard")," flag)")),(0,s.kt)("p",null,"Confirm that Testkube is running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all -n testkube\n")),(0,s.kt)("p",null,"By default, Testkube is installed in the ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube")," namespace."))}c.isMDXComponent=!0}}]);