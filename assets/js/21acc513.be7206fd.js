"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[3486],{3905:(e,t,s)=>{s.d(t,{Zo:()=>l,kt:()=>m});var n=s(7294);function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function a(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function o(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?a(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):a(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function p(e,t){if(null==e)return{};var s,n,r=function(e,t){if(null==e)return{};var s,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)s=a[n],t.indexOf(s)>=0||(r[s]=e[s]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)s=a[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),s=t;return e&&(s="function"==typeof e?e(t):o(o({},t),e)),s},l=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var s=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=u(s),m=r,g=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return s?n.createElement(g,o(o({ref:t},l),{},{components:s})):n.createElement(g,o({ref:t},l))}));function m(e,t){var s=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=s.length,o=new Array(a);o[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var u=2;u<a;u++)o[u]=s[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,s)}d.displayName="MDXCreateElement"},9317:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var n=s(7462),r=(s(7294),s(3905));const a={sidebar_position:1,sidebar_label:"Cypress"},o="Cypress Tests",p={unversionedId:"test-types/executor-cypress",id:"test-types/executor-cypress",title:"Cypress Tests",description:"Check out our blog post to follow tutorial steps for end-to-end testing of your Kubernetes applications with Cypress.",source:"@site/docs/4-test-types/executor-cypress.md",sourceDirName:"4-test-types",slug:"/test-types/executor-cypress",permalink:"/testkube/test-types/executor-cypress",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/4-test-types/executor-cypress.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Cypress"},sidebar:"tutorialSidebar",previous:{title:"Test Types",permalink:"/testkube/category/test-types"},next:{title:"Postman",permalink:"/testkube/test-types/executor-postman"}},i={},u=[{value:"<strong>Creating a New Test</strong>",id:"creating-a-new-test",level:2},{value:"<strong>Creating the Testkube Test Script</strong>",id:"creating-the-testkube-test-script",level:2},{value:"<strong>Starting the Test</strong>",id:"starting-the-test",level:2},{value:"<strong>Getting Execution Results</strong>",id:"getting-execution-results",level:2},{value:"<strong>Adding Parameters</strong>",id:"adding-parameters",level:2},{value:"Using Different Cypress Images",id:"using-different-cypress-images",level:2},{value:"<strong>Summary</strong>",id:"summary",level:2}],l={toc:u};function c(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cypress-tests"},"Cypress Tests"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Check out our ",(0,r.kt)("a",{parentName:"strong",href:"https://kubeshop.io/blog/end-to-end-tests-of-your-kubernetes-applications-with-cypress"},"blog post")," to follow tutorial steps for end-to-end testing of your Kubernetes applications with Cypress.")),(0,r.kt)("p",null,"Testkube makes running Cypress tests simple. As Cypress is organised in projects, Testkube allows tests to be defined in a Github repository."),(0,r.kt)("p",null,"To create a new Cypress test, you will need a Git repository with an example Cypress project. Please follow the Cypress documentation for details - ",(0,r.kt)("a",{parentName:"p",href:"https://docs.cypress.io/guides/dashboard/projects"},"https://docs.cypress.io/guides/dashboard/projects"),"."),(0,r.kt)("h2",{id:"creating-a-new-test"},(0,r.kt)("strong",{parentName:"h2"},"Creating a New Test")),(0,r.kt)("p",null,"Let's assume we've created a Cypress project in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/testkube-executor-cypress/tree/main/examples"},"https://github.com/kubeshop/testkube-executor-cypress/tree/main/examples"),",\nwhich contains a really simple test that checks for the existence of a particular string on a web site.  We'll also check\nif the ",(0,r.kt)("strong",{parentName:"p"},"env")," parameter exists to show how to pass additional parameters into the test."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/testkube-executor-cypress/blob/main/examples/cypress/integration/simple-test.js"},"https://github.com/kubeshop/testkube-executor-cypress/blob/main/examples/cypress/integration/simple-test.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"describe('The Home Page', () => {\n  it('successfully loads', () => {\n    cy.visit('https://testkube.io') \n\n    expect(Cypress.env('testparam')).to.equal('testvalue')\n\n    cy.contains('Efficient testing of k8s applications')\n  })\n})\n")),(0,r.kt)("h2",{id:"creating-the-testkube-test-script"},(0,r.kt)("strong",{parentName:"h2"},"Creating the Testkube Test Script")),(0,r.kt)("p",null,"Create the Testkube test script from this example. The parameters passed are ",(0,r.kt)("strong",{parentName:"p"},"repository"),", ",(0,r.kt)("strong",{parentName:"p"},"branch")," and ",(0,r.kt)("strong",{parentName:"p"},"the path where the project exists"),". In the case of a mono repository, the parameters are ",(0,r.kt)("strong",{parentName:"p"},"name")," and ",(0,r.kt)("strong",{parentName:"p"},"type"),".\nWe will use the default Cypress executor (Testkube Cypress image)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl testkube create test --git-uri https://github.com/kubeshop/testkube-executor-cypress.git --git-branch main --git-path examples --name kubeshop-cypress --type cypress/project\n")),(0,r.kt)("p",null,"| If your test files are located in root path of the repository, you can omit the ",(0,r.kt)("inlineCode",{parentName:"p"},"--git-path")," flag."),(0,r.kt)("p",null,"Check that script is created:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get tests \n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                  AGE\nkubeshop-cypress      51s\n")),(0,r.kt)("h2",{id:"starting-the-test"},(0,r.kt)("strong",{parentName:"h2"},"Starting the Test")),(0,r.kt)("p",null,"Start the test:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl testkube run test kubeshop-cypress\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nType          : cypress/project\nName          : kubeshop-cypress\nExecution ID  : 615d5265b046f8fbd3d955d0\nExecution name: wildly-popular-worm\n\nTest queued for execution\nUse the following command to get test execution details:\n$ kubectl testkube get execution 615d5265b046f8fbd3d955d0\n\nor watch test execution until complete:\n$ kubectl testkube watch execution 615d5265b046f8fbd3d955d0\n")),(0,r.kt)("h2",{id:"getting-execution-results"},(0,r.kt)("strong",{parentName:"h2"},"Getting Execution Results")),(0,r.kt)("p",null,"Let's watch our test execution:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl testkube watch execution 615d43d3b046f8fbd3d955ca\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Type          : cypress/project\nName          : cypress-example\nExecution ID  : 615d43d3b046f8fbd3d955ca\nExecution name: early-vast-turtle\n\nWatching for changes\nStatus: error, Duration: 1m16s\n\nGetting results\nName: early-vast-turtle, Status: error, Duration: 1m16s\nprocess error: exit status 1\noutput:\n====================================================================================================\n\n  (Run Starting)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Cypress:    8.3.0                                                                              \u2502\n  \u2502 Browser:    Electron 91 (headless)                                                             \u2502\n  \u2502 Specs:      1 found (simple-test.js)                                                           \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  Running:  simple-test.js                                                                  (1 of 1)\n\n\n  The Home Page\n    1) successfully loads\n\n\n  0 passing (2s)\n  1 failing\n\n  1) The Home Page\n       successfully loads:\n     AssertionError: expected undefined to equal 'testvalue'\n      at Context.eval (http://localhost:34845/__cypress/tests?p=cypress/integration/simple-test.js:102:41)\n\n\n\n\n  (Results)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Tests:        1                                                                                \u2502\n  \u2502 Passing:      0                                                                                \u2502\n  \u2502 Failing:      1                                                                                \u2502\n  \u2502 Pending:      0                                                                                \u2502\n  \u2502 Skipped:      0                                                                                \u2502\n  \u2502 Screenshots:  1                                                                                \u2502\n  \u2502 Video:        true                                                                             \u2502\n  \u2502 Duration:     2 seconds                                                                        \u2502\n  \u2502 Spec Ran:     simple-test.js                                                                   \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n  (Screenshots)\n\n  -  /tmp/testkube-scripts1127226423/repo/examples/cypress/screenshots/simple-test.js/     (1280x720)\n     The Home Page -- successfully loads (failed).png\n\n\n  (Video)\n\n  -  Started processing:  Compressing to 32 CRF\n    Compression progress:  35%\n  -  Finished processing: /tmp/testkube-scripts1127226423/repo/examples/cypress/videos   (19 seconds)\n                          /simple-test.js.mp4\n\n\n====================================================================================================\n\n  (Run Finished)\n\n\n       Spec                                              Tests  Passing  Failing  Pending  Skipped\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 \u2716  simple-test.js                           00:02        1        -        1        -        - \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u2716  1 of 1 failed (100%)                     00:02        1        -        1        -        -\n\n\n\nTest execution completed in 1m17s\n\n")),(0,r.kt)("h2",{id:"adding-parameters"},(0,r.kt)("strong",{parentName:"h2"},"Adding Parameters")),(0,r.kt)("p",null,"The test failed because of ",(0,r.kt)("inlineCode",{parentName:"p"},"AssertionError: expected undefined to equal 'testvalue'"),"."),(0,r.kt)("p",null,"The test parameter was not passed into the test script. In this test, the parameter will have the name ",(0,r.kt)("inlineCode",{parentName:"p"},"testparam")," and its value will be ",(0,r.kt)("inlineCode",{parentName:"p"},"testvalue"),".   "),(0,r.kt)("p",null,"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"-f")," flag to follow the execution and watch for changes. Currently, we're only looking for test completion, but, in the future, we'll pipe test output in real time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl testkube run test kubeshop-cypress -v testparam=testvalue -f\n")),(0,r.kt)("p",null,"Tip: If you want to pass secret variables pass ",(0,r.kt)("inlineCode",{parentName:"p"},"-s somesecretvar=secretvalue")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"--secret-variable"),")\nTestkube will convert value of this variable into Kubernetes ",(0,r.kt)("inlineCode",{parentName:"p"},"Secret")," rescource."),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nType          : cypress/project\nName          : kubeshop-cypress\nExecution ID  : 615d5372b046f8fbd3d955d2\nExecution name: nominally-able-glider\n\nTest queued for execution\nUse the following command to get test execution details:\n$ kubectl testkube get execution 615d5372b046f8fbd3d955d2\n\nor watch test execution until complete:\n$ kubectl testkube watch execution 615d5372b046f8fbd3d955d2\n\n\nWatching for changes\nStatus: queued, Duration: 0s\nStatus: pending, Duration: 383.064ms\n....\nStatus: pending, Duration: 1m45.405939s\nStatus: success, Duration: 1m45.405939s\n\nGetting results\nName: nominally-able-glider, Status: success, Duration: 2562047h47m16.854775807s\n\n====================================================================================================\n\n  (Run Starting)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Cypress:    8.5.0                                                                              \u2502\n  \u2502 Browser:    Electron 91 (headless)                                                             \u2502\n  \u2502 Specs:      1 found (simple-test.js)                                                           \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  Running:  simple-test.js                                                                  (1 of 1)\n\n  (Results)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Tests:        1                                                                                \u2502\n  \u2502 Passing:      1                                                                                \u2502\n  \u2502 Failing:      0                                                                                \u2502\n  \u2502 Pending:      0                                                                                \u2502\n  \u2502 Skipped:      0                                                                                \u2502\n  \u2502 Screenshots:  0                                                                                \u2502\n  \u2502 Video:        true                                                                             \u2502\n  \u2502 Duration:     19 seconds                                                                       \u2502\n  \u2502 Spec Ran:     simple-test.js                                                                   \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n  (Video)\n\n  -  Started processing:  Compressing to 32 CRF\n    Compression progress:  39%\n    Compression progress:  81%\n  -  Finished processing: /tmp/testkube-scripts531364188/repo/examples/cypress/videos/   (30 seconds)\n                          simple-test.js.mp4\n\n    Compression progress:  100%\n\n====================================================================================================\n\n  (Run Finished)\n\n\n       Spec                                              Tests  Passing  Failing  Pending  Skipped\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 \u2714  simple-test.js                           00:19        1        1        -        -        - \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u2714  All specs passed!                        00:19        1        1        -        -        -\n\nUse the following command to get test execution details:\n$ kubectl testkube get execution 615d5372b046f8fbd3d955d2\n\nTest execution completed in 1m45.405939s\n")),(0,r.kt)("h2",{id:"using-different-cypress-images"},"Using Different Cypress Images"),(0,r.kt)("p",null,"In the Cypress world, there are instances when you want to have control over your Runtime environment. Testkube can easily handle that for you!\nWe're building several Cypress images to handle features that different versions of Cypress can support."),(0,r.kt)("p",null,"To use a different executor you can use one of our pre-built ones (for Cypress 8, 9, 10 and Custom Testkube images) or build your own Docker image based on a Cypress executor."),(0,r.kt)("p",null,"Let's assume we need official Cypress 10 for our test runs. To handle that issue, create a new Cypress executor:"),(0,r.kt)("p",null,"content of ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress-v10-executor.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: executor.testkube.io/v1\nkind: Executor\nmetadata:\n  name: cypress-v10-executor\n  namespace: testkube\nspec:\n  image: kubeshop/testkube-cypress-executor:1.1.7-cypress10   # <-- we\'re buidling cypress versions\n  types:\n  - cypress:v10/test # <-- just create different test type with naming convention "framework:version/type"\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Tip: Look for recent executor versions here ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/repository/registry-1.docker.io/kubeshop/testkube-cypress-executor/tags?page=1&ordering=last_updated"},"https://hub.docker.com/repository/registry-1.docker.io/kubeshop/testkube-cypress-executor/tags?page=1&ordering=last_updated"),".")),(0,r.kt)("p",null,"And add it to your cluster: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f cypress-v10-executor.yaml \n")),(0,r.kt)("p",null,"Now, create a new test with a type which our new executor can handle e.g.: ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress:v10/test")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"}," # create test\n kubectl testkube create test --git-uri https://github.com/kubeshop/testkube-executor-cypress.git --git-path examples --type cypress:v10/test --name cypress-v10-example-test --git-branch main\n\n# and run it\nkubectl testkube run test cypress-v10-example-test -f\n")),(0,r.kt)("h2",{id:"summary"},(0,r.kt)("strong",{parentName:"h2"},"Summary")),(0,r.kt)("p",null,"Our first test completed successfully! As we've seen above, it's really easy to run Cypress tests with Testkube!"))}c.isMDXComponent=!0}}]);