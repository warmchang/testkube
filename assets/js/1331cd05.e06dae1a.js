"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[2719],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,b=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return n?a.createElement(b,r(r({ref:t},d),{},{components:n})):a.createElement(b,r({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<s;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},15005:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const s={},r="Dependencies for Testkube",i={unversionedId:"concepts/dependencies",id:"concepts/dependencies",title:"Dependencies for Testkube",description:"Installing Testkube runs a Nats.io, Minio and MongoDB instance in your Kubernetes cluster. There is an option to replace some of these with your own instances.",source:"@site/docs/concepts/dependencies.md",sourceDirName:"concepts",slug:"/concepts/dependencies",permalink:"/concepts/dependencies",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/concepts/dependencies.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Triggers",permalink:"/concepts/triggers"},next:{title:"Common Issues",permalink:"/concepts/common-issues"}},l={},c=[{value:"MongoDB",id:"mongodb",level:2},{value:"SSL Connections",id:"ssl-connections",level:3},{value:"Amazon DocumentDB",id:"amazon-documentdb",level:3},{value:"With TLS Enabled",id:"with-tls-enabled",level:4}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dependencies-for-testkube"},"Dependencies for Testkube"),(0,o.kt)("p",null,"Installing Testkube runs a Nats.io, Minio and MongoDB instance in your Kubernetes cluster. There is an option to replace some of these with your own instances."),(0,o.kt)("h2",{id:"mongodb"},"MongoDB"),(0,o.kt)("p",null,"MongoDB is used for storage of Testkube Test results and various Testkube configurations as telemetry settings and cluster ID."),(0,o.kt)("p",null,"In order to use an external MongoDB instance, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Make sure you have access to the MongoDB you want to connect to - note: newest versions of MongoDB might not work optimally with Testkube, for the best experience, use MongoDB v4.4.12"),(0,o.kt)("li",{parentName:"ol"},"Install Testkube with --set mongo.enabled=false:\n",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl testkube install --set mongo.enabled=false")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/helm-charts/blob/main/charts/testkube/values.yaml"},"Update MongoDB details for the api-server in the Helm values with valid connection string"),".")),(0,o.kt)("h3",{id:"ssl-connections"},"SSL Connections"),(0,o.kt)("p",null,"Inspecting the Testkube API-server manifest shows the following MongoDB-related environment variables:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_DSN"'),' (default:"mongodb://localhost:27017") - connection string'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_DB"'),' (default:"testkube") - database name'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_SSL_CERT"')," (no default value) - reference to Kubernetes secret for MongoDB instances with SSL enabled"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_SSL_CA_FILE_KEY"'),' (default:"sslCertificateAuthorityFile") - the key in the secret that marks the CA file'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_SSL_CLIENT_FILE_KEY"'),' (default:"sslClientCertificateKeyFile") - the key in the secret that marks the client certificate file'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"API_MONGO_SSL_CLIENT_FILE_PASS_KEY"'),' (default:"sslClientCertificateKeyFilePassword") - the key in the secret that marks the client certificate file password')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"API_MONGO_SSL_CERT")," expects the name of a Kubernetes secret containing all the necessary information to establish an SSL connection to the MongoDB instance. This secret has to be in the ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube")," namespace and should have the following structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: mongo-ssl-certs\n  namespace: testkube\ntype: Opaque\ndata:\n  sslCertificateAuthorityFile: <base64 encoded root-ca.pem>\n  sslClientCertificateKeyFile: <base64 encoded mongodb.pem>\n  sslClientCertificateKeyFilePassword: <base64 encoded password>\n")),(0,o.kt)("p",null,"The keys of the fields can be modified. To set these variables on helm-charts level, set ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/helm-charts/blob/main/charts/testkube-api/values.yaml"},"mongodb.sslCertSecret")," to the name of the secret. If needed, also set ",(0,o.kt)("em",{parentName:"p"},"mongodb.sslCAFileKey"),", ",(0,o.kt)("em",{parentName:"p"},"mongo.sslClientFileKey")," and ",(0,o.kt)("em",{parentName:"p"},"mongodb.sslClientFilePassKey"),"."),(0,o.kt)("h3",{id:"amazon-documentdb"},"Amazon DocumentDB"),(0,o.kt)("p",null,"Testkube supports using ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/documentdb/"},"Amazon DocumentDB"),", the managed version on MongoDB on AWS, as its database. Configuring it without TLS enabled is straightforward: add the connection string, and make sure the features that are not supported by DocumentDB are disabled. The parameters in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/helm-charts/blob/main/charts/testkube-api/values.yaml"},"helm-charts")," are:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'mongodb:\n  dsn: "mongodb://docdbadmin:<insertYourPassword>@docdb.cluster.us-east-1.docdb.amazonaws.com:27017/?retryWrites=false"\n  allowDiskUse: false\n')),(0,o.kt)("h4",{id:"with-tls-enabled"},"With TLS Enabled"),(0,o.kt)("p",null,"Using DocumentDB with TLS enabled is fairly simple as well. You will need to specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"dbType")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"allowTLS")," in addition to the previous fields:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'mongodb:\n  dsn: "mongodb://docdbadmin:<insertYourPassword>@docdb.cluster.location.docdb.amazonaws.com:27017/?retryWrites=false"\n  allowDiskUse: false\n  dbType: docdb\n  allowTLS: true\n')),(0,o.kt)("p",null,"Testkube will download and use the CA certificates provided by AWS from ",(0,o.kt)("a",{parentName:"p",href:"https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem"},"https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem"),"."))}u.isMDXComponent=!0}}]);