"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[107],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var s=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=s.createContext({}),l=function(e){var t=s.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return s.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||r;return n?s.createElement(f,i(i({ref:t},c),{},{components:n})):s.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}p.displayName="MDXCreateElement"},89613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=n(87462),a=(n(67294),n(3905));const r={},i="Getting Results",o={unversionedId:"concepts/tests/tests-getting-results",id:"concepts/tests/tests-getting-results",title:"Getting Results",description:"We saw how simple it is to create and run Testkube tests executions. Obtaining test results is also simple.",source:"@site/docs/concepts/tests/tests-getting-results.md",sourceDirName:"concepts/tests",slug:"/concepts/tests/tests-getting-results",permalink:"/testkube/concepts/tests/tests-getting-results",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/concepts/tests/tests-getting-results.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Running Tests",permalink:"/testkube/concepts/tests/tests-running"},next:{title:"Using Test Variables",permalink:"/testkube/concepts/tests/tests-variables"}},u={},l=[{value:"Getting Test Executions After Test is Executed",id:"getting-test-executions-after-test-is-executed",level:2},{value:"Change the Output Format of Execution Results",id:"change-the-output-format-of-execution-results",level:2},{value:"JSON Output",id:"json-output",level:3},{value:"Need Non-standard Output? Go-Template for the Rescue",id:"need-non-standard-output-go-template-for-the-rescue",level:3},{value:"Getting a List of Test Executions",id:"getting-a-list-of-test-executions",level:2},{value:"Getting a List of Recent Executions",id:"getting-a-list-of-recent-executions",level:3},{value:"Getting a List of Executions in Different Formats",id:"getting-a-list-of-executions-in-different-formats",level:3},{value:"JSON",id:"json",level:4},{value:"Go-Template",id:"go-template",level:4},{value:"Getting a List of Executions of a Given Test",id:"getting-a-list-of-executions-of-a-given-test",level:3},{value:"Getting the Test Status of a Given Test from Test CRD",id:"getting-the-test-status-of-a-given-test-from-test-crd",level:3}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-results"},"Getting Results"),(0,a.kt)("p",null,"We saw how simple it is to create and run Testkube tests executions. Obtaining test results is also simple."),(0,a.kt)("h2",{id:"getting-test-executions-after-test-is-executed"},"Getting Test Executions After Test is Executed"),(0,a.kt)("p",null,"After each run, Testkube informs you that you can get results of a given test execution."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl testkube run test api-incluster-test\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Type          : postman/collection\nName          : api-incluster-test\nExecution ID  : 615d6398b046f8fbd3d955d4\nExecution name: openly-full-bream\n\nTest queued for execution\nUse the following command to get test execution details:\n$ kubectl testkube get execution 615d6398b046f8fbd3d955d4\n\nOr watch test execution until complete:\n$ kubectl testkube watch execution 615d6398b046f8fbd3d955d4\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"testkube get execution 615d6398b046f8fbd3d955d4")," - is for getting string output of test execution, where ",(0,a.kt)("inlineCode",{parentName:"p"},"615d6398b046f8fbd3d955d4")," is the test execution ID."),(0,a.kt)("h2",{id:"change-the-output-format-of-execution-results"},"Change the Output Format of Execution Results"),(0,a.kt)("p",null,"By default, Testkube returns string output of a particular executor. It can also return JSON or Go-Template based outputs."),(0,a.kt)("h3",{id:"json-output"},"JSON Output"),(0,a.kt)("p",null,"Sometimes you need to parse test results programmatically. To simplify this task, test execution results can be in JSON format."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get execution 615d7e1ab046f8fbd3d955d6 -o json\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},'{\n  "id": "615d7e1ab046f8fbd3d955d6",\n  "testName": "api-incluster-test",\n  "testType": "postman/collection",\n  "name": "monthly-sure-finch",\n  "executionResult": {\n    "status": "passed",\n    "startTime": "2021-10-06T10:44:46.338Z",\n    "endTime": "2021-10-06T10:44:46.933Z",\n    "output": "newman\\n\\nAPI-Health\\n\\n\u2192 Health\\n  GET http://testkube-api-server:8088/health [200 OK, 124B, 282ms]\\n  \u2713  Status code is 200\\n\\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n\u2502                         \u2502           executed \u2502            failed \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502              iterations \u2502                  1 \u2502                 0 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502                requests \u2502                  1 \u2502                 0 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502            test-tests \u2502                  2 \u2502                 0 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502      prerequest-tests \u2502                  1 \u2502                 0 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502              assertions \u2502                  1 \u2502                 0 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502 total run duration: 519ms                                        \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502 total data received: 8B (approx)                                 \u2502\\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\\n\u2502 average response time: 282ms [min: 282ms, max: 282ms, s.d.: 0\xb5s] \u2502\\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n",\n    "outputType": "text/plain",\n    "steps": [\n      {\n        "name": "Health",\n        "duration": "282ms",\n        "status": "passed",\n        "assertionResults": [\n          { "name": "Status code is 200", "status": "passed" }\n        ]\n      }\n    ]\n  }\n}\n')),(0,a.kt)("p",null,"It is quite easy to parse data from test executions with tools like ",(0,a.kt)("inlineCode",{parentName:"p"},"jq")," or in other programmatic ways."),(0,a.kt)("h3",{id:"need-non-standard-output-go-template-for-the-rescue"},"Need Non-standard Output? Go-Template for the Rescue"),(0,a.kt)("p",null,"If you need non-standard test execution output, you can easily use output ",(0,a.kt)("inlineCode",{parentName:"p"},"-o go")," with the passed ",(0,a.kt)("inlineCode",{parentName:"p"},"--go-template")," template content."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get execution 615d7e1ab046f8fbd3d955d6 -ogo --go-template='{{.Name}} {{.Id}} {{.ExecutionResult.Status}}'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"monthly-sure-finch 615d7e1ab046f8fbd3d955d6 success\n")),(0,a.kt)("h2",{id:"getting-a-list-of-test-executions"},"Getting a List of Test Executions"),(0,a.kt)("h3",{id:"getting-a-list-of-recent-executions"},"Getting a List of Recent Executions"),(0,a.kt)("p",null,"We can get a list of current executions with use of the ",(0,a.kt)("inlineCode",{parentName:"p"},"executions")," subcommand:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get executions\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"        TEST          |        TYPE        | NAME |            ID            | STATUS\n+---------------------+--------------------+------+--------------------------+---------+\n  api-incluster-test  | postman/collection |      | 615d7e1ab046f8fbd3d955d6 | success\n  api-incluster-test  | postman/collection |      | 615d6398b046f8fbd3d955d4 | success\n  kubeshop-cypress    | cypress/project    |      | 615d5372b046f8fbd3d955d2 | success\n  kubeshop-cypress    | cypress/project    |      | 615d5265b046f8fbd3d955d0 | error\n  cypress-example     | cypress/project    |      | 615d4fe6b046f8fbd3d955ce | error\n  cypress-example     | cypress/project    |      | 615d4556b046f8fbd3d955cc | error\n")),(0,a.kt)("p",null,"Now we can use an ID to check the results:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get execution 615d5265b046f8fbd3d955d0\n")),(0,a.kt)("h3",{id:"getting-a-list-of-executions-in-different-formats"},"Getting a List of Executions in Different Formats"),(0,a.kt)("p",null,"Terminal mode table data is not always best when processing results in code or shell tests. To simplify this, we have implemented JSON or Go-Template based results when getting results lists."),(0,a.kt)("h4",{id:"json"},"JSON"),(0,a.kt)("p",null,"Getting JSON results is quite easy, just pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"-o json")," flag to the command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get executions -o json\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},'{\n  "totals": {\n    "results": 17,\n    "passed": 7,\n    "failed": 10,\n    "queued": 0,\n    "pending": 0\n  },\n  "results": [\n    {\n      "id": "615d7e1ab046f8fbd3d955d6",\n      "name": "",\n      "testName": "api-incluster-test",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-10-06T10:44:46.338Z",\n      "endTime": "2021-10-06T10:44:46.933Z"\n    },\n    {\n      "id": "615d6398b046f8fbd3d955d4",\n      "name": "",\n      "testName": "api-incluster-test",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-10-06T08:51:39.834Z",\n      "endTime": "2021-10-06T08:51:40.432Z"\n    },\n    {\n      "id": "615d5372b046f8fbd3d955d2",\n      "name": "",\n      "testName": "kubeshop-cypress",\n      "testType": "cypress/project",\n      "status": "passed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-10-06T07:44:30.025Z"\n    },\n    {\n      "id": "615d5265b046f8fbd3d955d0",\n      "name": "",\n      "testName": "kubeshop-cypress",\n      "testType": "cypress/project",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-10-06T07:40:09.261Z"\n    },\n    {\n      "id": "615d4fe6b046f8fbd3d955ce",\n      "name": "",\n      "testName": "cypress-example",\n      "testType": "cypress/project",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-10-06T07:28:54.579Z"\n    },\n    {\n      "id": "615d4556b046f8fbd3d955cc",\n      "name": "",\n      "testName": "cypress-example",\n      "testType": "cypress/project",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-10-06T06:43:44.1Z"\n    },\n    {\n      "id": "615d43d3b046f8fbd3d955ca",\n      "name": "",\n      "testName": "cypress-example",\n      "testType": "cypress/project",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-10-06T06:37:52.601Z"\n    },\n    {\n      "id": "6155cd7db046f8fbd3d955c8",\n      "name": "",\n      "testName": "postman-test-7f6qrm",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-09-30T14:45:20.819Z",\n      "endTime": "2021-09-30T14:45:21.419Z"\n    },\n    {\n      "id": "6155cd67b046f8fbd3d955c6",\n      "name": "",\n      "testName": "sanity",\n      "testType": "postman/collection",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-30T14:45:00.135Z"\n    },\n    {\n      "id": "615322f3f47de75f31ae7a06",\n      "name": "",\n      "testName": "long-1",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-09-28T14:13:11.293Z",\n      "endTime": "2021-09-28T14:13:45.271Z"\n    },\n    {\n      "id": "61532298f47de75f31ae7a04",\n      "name": "",\n      "testName": "long-1",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-09-28T14:11:39.179Z",\n      "endTime": "2021-09-28T14:12:15.202Z"\n    },\n    {\n      "id": "6151b4b342189df67944968e",\n      "name": "",\n      "testName": "postman-test-7f6qrm",\n      "testType": "postman/collection",\n      "status": "passed",\n      "startTime": "2021-09-27T12:10:31.581Z",\n      "endTime": "2021-09-27T12:10:32.105Z"\n    },\n    {\n      "id": "6151b49d42189df67944968c",\n      "name": "",\n      "testName": "curl-test",\n      "testType": "curl/test",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-27T12:10:06.954Z"\n    },\n    {\n      "id": "6151b41742189df67944968a",\n      "name": "",\n      "testName": "curl-test",\n      "testType": "curl/test",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-27T12:07:52.893Z"\n    },\n    {\n      "id": "6151b41342189df679449688",\n      "name": "",\n      "testName": "curl-test",\n      "testType": "curl/test",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-27T12:07:48.868Z"\n    },\n    {\n      "id": "6151b40f42189df679449686",\n      "name": "",\n      "testName": "curl-test",\n      "testType": "curl/test",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-27T12:07:44.89Z"\n    },\n    {\n      "id": "6151b40b42189df679449684",\n      "name": "",\n      "testName": "curl-test",\n      "testType": "curl/test",\n      "status": "failed",\n      "startTime": "0001-01-01T00:00:00Z",\n      "endTime": "2021-09-27T12:07:41.168Z"\n    }\n  ]\n}\n')),(0,a.kt)("h4",{id:"go-template"},"Go-Template"),(0,a.kt)("p",null,"To get a list of test execution IDs with their corresponding statuses with go-template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get executions -ogo --go-template '{{.Id}}:{{.Status}} '\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output"',title:'"Expected','output"':!0}," 615d7e1ab046f8fbd3d955d6:success 615d6398b046f8fbd3d955d4:success 615d5372b046f8fbd3d955d2:success 615d5265b046f8fbd3d955d0:error 615d4fe6b046f8fbd3d955ce:error 615d4556b046f8fbd3d955cc:error 615d43d3b046f8fbd3d955ca:error 6155cd7db046f8fbd3d955c8:success 6155cd67b046f8fbd3d955c6:error 615322f3f47de75f31ae7a06:success 61532298f47de75f31ae7a04:success 6151b4b342189df67944968e:success 6151b49d42189df67944968c:error 6151b41742189df67944968a:error 6151b41342189df679449688:error 6151b40f42189df679449686:error 6151b40b42189df679449684:error\n")),(0,a.kt)("h3",{id:"getting-a-list-of-executions-of-a-given-test"},"Getting a List of Executions of a Given Test"),(0,a.kt)("p",null,"To find the execution of a particular test, pass the test name as a parameter:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get executions api-incluster-test\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"        TEST         |        TYPE        | NAME |            ID            | STATUS\n+--------------------+--------------------+------+--------------------------+---------+\n  api-incluster-test | postman/collection |      | 615d6398b046f8fbd3d955d4 | success\n  api-incluster-test | postman/collection |      | 615d7e1ab046f8fbd3d955d6 | success\n")),(0,a.kt)("h3",{id:"getting-the-test-status-of-a-given-test-from-test-crd"},"Getting the Test Status of a Given Test from Test CRD"),(0,a.kt)("p",null,"To get the Test CRD status of a particular test, pass the test name as a parameter:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube get tests container-test --crd-only\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},'apiVersion: tests.testkube.io/v3\nkind: Test\nmetadata:\n  name: container-test\n  namespace: testkube\nspec:\n  type: container/test\n  content:\n    type: string\n    data: ""\n  executionRequest:\n    artifactRequest:\n      storageClassName: standard\n      volumeMountPath: /share\n      dirs:\n      - test/files\nstatus:\n  latestExecution:\n    id: 63b755cab2a16c73e8cfa1c4\n    number: 1\n    startTime: 2023-01-05T22:57:14Z\n    endTime: 2023-01-05T22:57:28Z\n    status: passed\n')))}d.isMDXComponent=!0}}]);