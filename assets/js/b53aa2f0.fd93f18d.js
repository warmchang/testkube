"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[8868],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?o.createElement(h,s(s({ref:t},p),{},{components:n})):o.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<r;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47338:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var o=n(87462),a=(n(67294),n(3905));const r={},s="Common Issues",i={unversionedId:"concepts/common-issues",id:"concepts/common-issues",title:"Common Issues",description:"How do I expose Testkube to the Internet?",source:"@site/docs/concepts/common-issues.md",sourceDirName:"concepts",slug:"/concepts/common-issues",permalink:"/concepts/common-issues",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/concepts/common-issues.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dependencies for Testkube",permalink:"/concepts/dependencies"},next:{title:"Test Sources",permalink:"/concepts/test-sources"}},l={},u=[{value:"How do I expose Testkube to the Internet?",id:"how-do-i-expose-testkube-to-the-internet",level:2},{value:"Why is the Testkube Dashboard not working or does not return results?",id:"why-is-the-testkube-dashboard-not-working-or-does-not-return-results",level:2},{value:"Opening the Dashboard Using CLI Is Not Working",id:"opening-the-dashboard-using-cli-is-not-working",level:2},{value:"Access the Service Under Test (SUT) Using Testkube",id:"access-the-service-under-test-sut-using-testkube",level:2},{value:"If You&#39;re Still Having Issues",id:"if-youre-still-having-issues",level:2},{value:"Other Installation Methods",id:"other-installation-methods",level:2},{value:"Installation on OpenShift deployed on GCP",id:"installation-on-openshift-deployed-on-gcp",level:3},{value:"Installation with S3 Storage and IAM Authentication",id:"installation-with-s3-storage-and-iam-authentication",level:3},{value:"Observability",id:"observability",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"common-issues"},"Common Issues"),(0,a.kt)("h2",{id:"how-do-i-expose-testkube-to-the-internet"},"How do I expose Testkube to the Internet?"),(0,a.kt)("p",null,"To expose Testkube to the Internet, you will need to create an Ingress for both the Testkube API and the Testkube dashboard."),(0,a.kt)("p",null,"Check the guides ",(0,a.kt)("a",{parentName:"p",href:"/guides/going-to-production/exposing-testkube/overview"},"here")," for different configurations."),(0,a.kt)("h2",{id:"why-is-the-testkube-dashboard-not-working-or-does-not-return-results"},"Why is the Testkube Dashboard not working or does not return results?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make sure the API endpoint is configured:")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img.gif",src:n(96152).Z,width:"600",height:"341"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make sure the endpoint is providing data, e.g. accessing the executors path:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"curl <endpoint>/v1/executors\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If no data is provided, make sure that all the Testkube components are running properly:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get pods -n testkube\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"NAME                                                        READY   STATUS    RESTARTS   AGE\npod/testkube-api-server-8445fd7b9f-jq5rh                    1/1     Running   0          10d\npod/testkube-dashboard-99f4c6cf5-x4dkz                      1/1     Running   0          12d\npod/testkube-minio-testkube-76786f8f64-9nl4c                1/1     Running   1          24d\npod/testkube-mongodb-74587998bb-8pzl2                       1/1     Running   0          12d\npod/testkube-operator-controller-manager-77ffbb8fdc-rxhvx   2/2     Running   0          5d23h\n")),(0,a.kt)("h2",{id:"opening-the-dashboard-using-cli-is-not-working"},"Opening the Dashboard Using CLI Is Not Working"),(0,a.kt)("p",null,"If there is a timeout error reported:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"testkube dashboard\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"checking readiness of services (error: timed-out waiting for dashboard and api)\n")),(0,a.kt)("p",null,"Make sure that there is not another dashboard process running in the background like in the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"ps aux | grep dashboard\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"user         76005   0.0  0.0 408628368   1648 s002  S+   12:32PM   0:00.00 grep dashboard\nuser         75985   0.0  0.1 409292320  43584 s001  S+   12:32PM   0:00.12 kubectl port-forward --namespace testkube deployment/testkube-dashboard 8080:8080\nuser         75984   0.0  0.1 409263376  37488 s001  S+   12:32PM   0:00.22 testkube dashboard\n")),(0,a.kt)("p",null,"Also, there might be some other process listening on the same port. To debug this, try port-forwarding manually:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl port-forward svc/testkube-dashboard 8080\nkubectl port-forward svc/testkube-api-server 8088\n")),(0,a.kt)("p",null,"Check for errors and try accessing:\n",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8081/apiEndpoint?apiEndpoint=localhost:8088/v1"},"http://localhost:8081/apiEndpoint?apiEndpoint=localhost:8088/v1")),(0,a.kt)("p",null,"If you see errors like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Unable to listen on port 8080: Listeners failed to create with the following errors: [unable to create listener: Error listen tcp4 127.0.0.1:8080: bind: address already in use unable to create listener: Error listen tcp6 [::1]:8080: bind: address already in use]\nerror: unable to listen on any of the requested ports: [{8080 8080}]\n")),(0,a.kt)("p",null,"Please stop the application that listens on 8080, 8088 ports."),(0,a.kt)("h2",{id:"access-the-service-under-test-sut-using-testkube"},"Access the Service Under Test (SUT) Using Testkube"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Services inside the same Kubernetes cluster can be accessed using the address ",(0,a.kt)("inlineCode",{parentName:"li"},"\\<service-name\\>.\\<service-namespace\\>.svc.cluster.local:\\<port-number\\>"),". If there are network restrictions configured, Testkube will need permissions to access the SUT over the local network of the cluster."),(0,a.kt)("li",{parentName:"ul"},"If Testkube and the SUT are not in the same cluster, SUT will have to be exposed to Testkube using an Ingress or a Load Balancer.")),(0,a.kt)("h2",{id:"if-youre-still-having-issues"},"If You're Still Having Issues"),(0,a.kt)("p",null,"If these guides do not solve the issue that you encountered or you have other questions or comments, please contact us on ",(0,a.kt)("a",{parentName:"p",href:"https://discord.com/invite/6zupCZFQbe"},"Discord"),"."),(0,a.kt)("h2",{id:"other-installation-methods"},"Other Installation Methods"),(0,a.kt)("h3",{id:"installation-on-openshift-deployed-on-gcp"},"Installation on OpenShift deployed on GCP"),(0,a.kt)("p",null,"To install Testkube you need an empty OpenShift cluster. Once the cluster is up and running update ",(0,a.kt)("inlineCode",{parentName:"p"},"values.yaml")," file, including the configuration below."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add security context for MongoDB to ",(0,a.kt)("inlineCode",{parentName:"li"},"values.yaml"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"mongodb:\n  securityContext:\n    enabled: true\n    fsGroup: 1000650001\n    runAsUser: 1000650001\n  podSecurityContext:\n    enabled: false\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1000650001\n    runAsNonRoot: true\n  volumePermissions:\n    enabled: false\n  auth:\n    enabled: false\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Add security context for ",(0,a.kt)("inlineCode",{parentName:"li"},"Patch")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Migrate")," jobs that are a part of Testkube Operator configuration to ",(0,a.kt)("inlineCode",{parentName:"li"},"values.yaml"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'testkube-operator:\n  webhook:\n    migrate:\n      enabled: true\n      securityContext:\n        allowPrivilegeEscalation: false\n        capabilities:\n          drop: ["ALL"]\n\n    patch:\n      enabled: true\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 1000650000\n        fsGroup: 1000650000\n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Install Testkube specifying the path to the new ",(0,a.kt)("inlineCode",{parentName:"li"},"values.yaml")," file")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"helm install testkube kubeshop/testkube --create-namespace --namespace testkube --values values.yaml\n")),(0,a.kt)("p",null,"Please notice that since we've just installed MongoDB with a ",(0,a.kt)("inlineCode",{parentName:"p"},"testkube-mongodb")," Helm release name, you are not required to reconfigure the Testkube API MongoDB connection URI. If you've installed with a different name/namespace, please adjust ",(0,a.kt)("inlineCode",{parentName:"p"},'--set testkube-api.mongodb.dsn: "mongodb://testkube-mongodb:27017"')," to your MongoDB service."),(0,a.kt)("h3",{id:"installation-with-s3-storage-and-iam-authentication"},"Installation with S3 Storage and IAM Authentication"),(0,a.kt)("p",null,"To use S3 as storage, the steps are as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ServiceAccount with the ARN specified.\ne.g.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::265500248336:role/minio-example\n  name: s3-access\n  namespace: testkube\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the Helm values.yaml file, link the ServiceAccount to the ",(0,a.kt)("inlineCode",{parentName:"p"},"testkube-api.minio.serviceAccountName")," and to ",(0,a.kt)("inlineCode",{parentName:"p"},"testkube-api.jobServiceAccountName")," then leave ",(0,a.kt)("inlineCode",{parentName:"p"},"minio.minioRootUser"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"minio.minioRootPassword")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"storage.port")," empty and set ",(0,a.kt)("inlineCode",{parentName:"p"},"storage.endpoint")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"s3.amazonaws.com"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install using Helm and the values file with the above modifications."))),(0,a.kt)("h2",{id:"observability"},"Observability"),(0,a.kt)("p",null,"There are two types of storage Mongo and Minio, read more details ",(0,a.kt)("a",{parentName:"p",href:"/guides/logging"},"here"),"."))}c.isMDXComponent=!0},96152:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/check-dashboard-api-endpoint-601b09015fecd56cd1da990480722a5a.gif"}}]);