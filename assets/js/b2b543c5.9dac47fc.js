"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[5453],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23612:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(67294),i=n(86010),o=n(35281),a=n(95999);const s="admonition_LlT9",l="admonitionHeading_tbUL",c="admonitionIcon_kALy",u="admonitionContent_S0QG";const p={note:{infimaClassName:"secondary",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))},label:r.createElement(a.Z,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)"},"note")},tip:{infimaClassName:"success",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 12 16"},r.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))},label:r.createElement(a.Z,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)"},"tip")},danger:{infimaClassName:"danger",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 12 16"},r.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))},label:r.createElement(a.Z,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)"},"danger")},info:{infimaClassName:"info",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))},label:r.createElement(a.Z,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)"},"info")},caution:{infimaClassName:"warning",iconComponent:function(){return r.createElement("svg",{viewBox:"0 0 16 16"},r.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},label:r.createElement(a.Z,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)"},"caution")}},d={secondary:"note",important:"info",success:"tip",warning:"danger"};function m(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=r.Children.toArray(e),n=t.find((e=>{var t;return r.isValidElement(e)&&"mdxAdmonitionTitle"===(null==(t=e.props)?void 0:t.mdxType)})),i=r.createElement(r.Fragment,null,t.filter((e=>e!==n)));return{mdxAdmonitionTitle:n,rest:i}}(e.children);return{...e,title:e.title??t,children:n}}function h(e){const{children:t,type:n,title:a,icon:h}=m(e),f=function(e){const t=d[e]??e;return p[t]||(console.warn(`No admonition config found for admonition type "${t}". Using Info as fallback.`),p.info)}(n),g=a??f.label,{iconComponent:y}=f,w=h??r.createElement(y,null);return r.createElement("div",{className:(0,i.Z)(o.k.common.admonition,o.k.common.admonitionType(e.type),"alert",`alert--${f.infimaClassName}`,s)},r.createElement("div",{className:l},r.createElement("span",{className:c},w),g),r.createElement("div",{className:u},t))}},73600:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));n(23612);const o={},a="Playwright",s={unversionedId:"test-types/executor-playwright",id:"test-types/executor-playwright",title:"Playwright",description:"Playwright is an end-to-end testing and automation framework developed by Microsoft. Starting from the Testkube Helm chart version 1.9.5, it is possible to use Testkube to manage your Playwright tests inside your Kubernetes cluster.",source:"@site/docs/test-types/executor-playwright.md",sourceDirName:"test-types",slug:"/test-types/executor-playwright",permalink:"/test-types/executor-playwright",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/test-types/executor-playwright.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Maven",permalink:"/test-types/executor-maven"},next:{title:"Postman",permalink:"/test-types/executor-postman"}},l={},c=[{value:"Running Playwright Tests",id:"running-playwright-tests",level:2},{value:"Create Test",id:"create-test",level:3},{value:"Run Test",id:"run-test",level:3},{value:"Check Artifacts",id:"check-artifacts",level:3},{value:"Special Requirements",id:"special-requirements",level:2},{value:"Reports",id:"reports",level:3},{value:"Using Different Playwright Versions",id:"using-different-playwright-versions",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"playwright"},"Playwright"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://playwright.dev/"},"Playwright")," is an end-to-end testing and automation framework developed by Microsoft. Starting from the Testkube Helm chart version 1.9.5, it is possible to use Testkube to manage your Playwright tests inside your Kubernetes cluster."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Check out our ",(0,i.kt)("a",{parentName:"strong",href:"https://testkube.io/blog/bring-playwright-tests-into-the-cloud-with-testkube"},"blog post")," to learn how to harness the power of Playwright Testing in your cloud-native apps.")),(0,i.kt)("h2",{id:"running-playwright-tests"},"Running Playwright Tests"),(0,i.kt)("p",null,"The Playwright Testkube runner pulls the test code from Git directories. When creating a new test, this needs to be configured via the ",(0,i.kt)("inlineCode",{parentName:"p"},"--git-*")," flags."),(0,i.kt)("h3",{id:"create-test"},"Create Test"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ testkube create test --git-branch lilla/feat/playwright-executor --git-uri https://github.com/vLia/testkube-tests.git --git-path "playwright" --name playwright-test-demo --type playwright/test\n\nTest created testkube / playwright-test-demo \ud83e\udd47\n')),(0,i.kt)("h3",{id:"run-test"},"Run Test"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ testkube run test playwright-test-demo\nType:              playwright/test\nName:              playwright-test-demo\nExecution ID:      63eb5948d2588841ffa577a0\nExecution name:    playwright-test-demo-1\nExecution number:  1\nStatus:            running\nStart time:        2023-02-14 09:50:00.924165379 +0000 UTC\nEnd time:          0001-01-01 00:00:00 +0000 UTC\nDuration:          \n\n\n\nTest execution started\nWatch test execution until complete:\n$ kubectl testkube watch execution playwright-test-demo-1\n\n\nUse following command to get test execution details:\n$ kubectl testkube get execution playwright-test-demo-1\n\n")),(0,i.kt)("p",null,"To follow up with the results of the execution, you can either ",(0,i.kt)("inlineCode",{parentName:"p"},"watch")," the execution while it is running or ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," the results of it after it is done, as seen in the commands printed out by the cli."),(0,i.kt)("h3",{id:"check-artifacts"},"Check Artifacts"),(0,i.kt)("p",null,"To get a list of the created artifacts, use the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ testkube get artifact playwright-test-demo-1\n  EXECUTION | NAME                  | SIZE (KB)  \n------------+-----------------------+------------\n            | playwright-report.zip |    180527  \n")),(0,i.kt)("p",null,"These files were created and uploaded to the previously configured object storage. To download them, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"testkube download artifact")," command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ testkube download artifact playwright-test-demo-1 playwright-report.zip data\nFile data/playwright-report.zip downloaded.\n")),(0,i.kt)("h2",{id:"special-requirements"},"Special Requirements"),(0,i.kt)("p",null,"Running tests in a containerized environment is convenient: it's simple, portable and increases the speed of development. There is a need to be aware of the limitations of this environment."),(0,i.kt)("h3",{id:"reports"},"Reports"),(0,i.kt)("p",null,"Similarly to many other testing tools, Playwright provides the option to open a browser window for reports. It is important to make sure reporters are not opening additional windows. "),(0,i.kt)("p",null,"The following environment variables are set on a Dockerfile-level, but it is still important to be mindful of these differences."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ENV CI=1\nENV PWTEST_SKIP_TEST_OUTPUT=1\n")),(0,i.kt)("h3",{id:"using-different-playwright-versions"},"Using Different Playwright Versions"),(0,i.kt)("p",null,"The Testkube Playwright executor supports only one version for now: 1.30.0. In case this does not suffice, the ",(0,i.kt)("a",{parentName:"p",href:"https://kubeshop.github.io/testkube/test-types/container-executor/#creating-and-configuring-container-executor-playwright"},"container executor docs")," contains instructions on how to set up your own executor with a different version of Playwright."))}p.isMDXComponent=!0}}]);